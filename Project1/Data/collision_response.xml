<?xml version="1.0" encoding="utf-8" ?>

<!--use TARGET, SOURCE, and DIRECTION or primative types as arguments for command constructors -->

<!-- TARGET is the object curretly being checked for collisions (first layer). SOURCE is the object it detects (second layer)-->

<!-- Type names must be fully qualified! (including the namespace!) (note: primitive type names are not the same as their keywords.) -->

<!-- Mirrored responses (Player->Enemy vs. Enemy->Player) only require one defined response! -->

<collision_response>
  <Player>
    <Enemy>
      <command type="Project1.Commands.PlayerTakeDamageCommand">
        <arg type="Project1.Player">TARGET</arg>
        <arg type="System.Int32">5</arg>
      </command>
      <command type="Project1.Commands.KnockBackCommand">
        <arg type="Project1.Collision">COLLISION</arg>
      </command>
    </Enemy>
    <Block>
      <command type="Project1.Commands.MoveInBoundsCommand">
        <arg type="Project1.Collision">COLLISION</arg>
      </command>
    </Block>
    <Item>
      <command type="Project1.Commands.PlayerCollectItemCommand">
        <arg type="Project1.Collision">COLLISION</arg>
      </command>
    </Item>
	  <InstantUseItem>
		  <command type="Project1.Commands.PlayerCollectInstantUseItemCommand">
			  <arg type="Project1.Collision">COLLISION</arg>
		  </command>
	  </InstantUseItem> 
    <Weapon>
      
    </Weapon>
  </Player>

  <DamagedPlayer>
    <Block>
      <command type="Project1.Commands.MoveInBoundsCommand">
        <arg type="Project1.Collision">COLLISION</arg>
      </command>
    </Block>
  </DamagedPlayer>

  <Enemy>
    <Weapon>
      <command type="Project1.Commands.EnemyTakeDamageCommand">
        <arg type="Project1.Enemy.IEnemy">TARGET</arg>
      </command>
    </Weapon>
    <Block>
      <command type="Project1.Commands.MoveInBoundsCommand">
        <arg type="Project1.Collision">COLLISION</arg>
      </command>
    </Block>
    <Item>
      <command type="Project1.Commands.MoveInBoundsCommand">
        <arg type="Project1.Collision">COLLISION</arg>
      </command>
    </Item>
    <Projectile>
      <command type="Project1.Commands.EnemyTakeDamageCommand">
        <arg type="Project1.Enemy.IEnemy">TARGET</arg>
        <arg type="Project1.Interfaces.IProjectile">SOURCE</arg>
      </command>
      <command type="Project1.Commands.DeleteGameObjectCommand">
        <arg type="Project1.Interfaces.IProjectile">SOURCE</arg>
        <arg type="Project1.Collision">COLLISION</arg>
      </command>
    </Projectile>
  </Enemy>

  <Weapon>
    <Enemy>
      <command type="Project1.Commands.EnemyTakeDamageCommand">
        <arg type="Project1.IEnemy">SOURCE</arg>
      </command>
    </Enemy>
    <Player>
    </Player>
    <Block>
      
    </Block>
  </Weapon>

  <Projectile>
    <Block>
      <command type="Project1.Commands.DeleteGameObjectCommand">
        <arg type="Project1.Interfaces.IGameObject">TARGET</arg>
      </command>
    </Block>
    <Item>
      
    </Item>
  </Projectile>
</collision_response>